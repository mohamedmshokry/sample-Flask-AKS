name: 02-AKS-Provision-Terraform
trigger:
  branches:
    include:
      - main

pool:
  name: 'local-hosted'

variables:
  terraformDirectory: 'terraform-aks-provisioning'

stages:
- stage: ProvisionAKS
  jobs:
  - job: AKSProvisioning
    displayName: 'Provision AKS Cluster using Terraform'
    steps:
    - checkout: self
      persistCredentials: true

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'
    
    - script: |
        # Set environment variables for ARM_* using Azure DevOps secrets
        export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
        export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
        export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
        export ARM_TENANT_ID=$(ARM_TENANT_ID)
      displayName: 'Set ARM Environment Variables'
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)

    - script: |
        mkdir -p $(terraformDirectory)
        cp "$(System.DefaultWorkingDirectory)/_temp/terraform.tfvars" "$(terraformDirectory)/terraform.tfvars"
        terraform -chdir=$(terraformDirectory) init
        terraform -chdir=$(terraformDirectory) plan -var-file=terraform.tfvars -out=terraform.tfplan
        terraform -chdir=$(terraformDirectory) apply -auto-approve terraform.tfplan
      displayName: 'Initialize, Plan, and Apply Terraform'
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)